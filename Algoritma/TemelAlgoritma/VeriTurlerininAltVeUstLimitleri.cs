using System;
namespace Programlama.VeriTurlerininAltVeUstLimitleriNameSpace
{
    class VeriTurlerininAltVeUstLimitleriClass
    {
        public static void VeriTurleriVeLimitleriMain()
        {
            // 8 - bit integer
            System.Console.WriteLine(nameof(SByte));//nameof ilgili veri sƒ±nƒ±fƒ±nƒ±n ismini verecek
            System.Console.WriteLine($"Alt Limit     : {SByte.MinValue,20}");//sByte.MinValue -> sByte nin alabildiƒüi en az deƒüeri g√∂sterir. "20" karakter bo≈ülƒ±k bƒ±rak

            System.Console.WriteLine($"√úst Limit     : {SByte.MaxValue,20}");//sByte.MaxValue -> sByte nin alabildiƒüi en fazla deƒüeri g√∂sterir. "20" karakter bo≈ülƒ±k bƒ±rak

            System.Console.WriteLine($"Boyut    :{sizeof(SByte),20}");//sizeof(SByte) -> deƒüi≈üken tipi hafƒ±zada nekadar byte alan kaplƒ±yor. "20" karakter bo≈ülƒ±k bƒ±rak

            System.Console.WriteLine();
            Console.ReadKey();

            //Unsigned 8 - bit integer
            System.Console.WriteLine(nameof(Byte));//nameof ilgili veri sƒ±nƒ±fƒ±nƒ±n ismini verecek
            System.Console.WriteLine($"Alt Limit     : {Byte.MinValue,20}");//Byte.MinValue -> Byte nin alabildiƒüi en az deƒüeri g√∂sterir. "20" karakter bo≈ülƒ±k bƒ±rak
            System.Console.WriteLine($"√úst Limit     : {Byte.MaxValue,20}");//Byte.MaxValue -> Byte nin alabildiƒüi en fazla deƒüeri g√∂sterir. "20" karakter bo≈ülƒ±k bƒ±rak
            System.Console.WriteLine($"Boyut    :{sizeof(Byte),20}");//sizeof(Byte) -> deƒüi≈üken tipi hafƒ±zada nekadar byte alan kaplƒ±yor. "20" karakter bo≈ülƒ±k bƒ±rak
            System.Console.WriteLine();
            Console.ReadKey();


            //Signed 16 - bit integer
            System.Console.WriteLine(nameof(Int16));//nameof ilgili veri sƒ±nƒ±fƒ±nƒ±n ismini verecek
            System.Console.WriteLine($"Alt Limit     : {Int16.MinValue,20}");//Int16.MinValue -> Int16 nin alabildiƒüi en az deƒüeri g√∂sterir. "20" karakter bo≈ülƒ±k bƒ±rak
            System.Console.WriteLine($"√úst Limit     : {Int16.MaxValue,20}");//Int16.MaxValue -> Int16 nin alabildiƒüi en fazla deƒüeri g√∂sterir. "20" karakter bo≈ülƒ±k bƒ±rak
            System.Console.WriteLine($"Boyut    :{sizeof(Int16),20}");//sizeof(Int16) -> deƒüi≈üken tipi hafƒ±zada nekadar byte alan kaplƒ±yor. "20" karakter bo≈ülƒ±k bƒ±rak
            System.Console.WriteLine();
            Console.ReadKey();

            //Unsigned 16 - bit integer
            System.Console.WriteLine(nameof(UInt16));//nameof ilgili veri sƒ±nƒ±fƒ±nƒ±n ismini verecek
            System.Console.WriteLine($"Alt Limit     : {UInt16.MinValue,20}");//UInt16.MinValue -> UInt16 nin alabildiƒüi en az deƒüeri g√∂sterir. "20" karakter bo≈ülƒ±k bƒ±rak
            System.Console.WriteLine($"√úst Limit     : {UInt16.MaxValue,20}");//UInt16.MaxValue -> UInt16 nin alabildiƒüi en fazla deƒüeri g√∂sterir. "20" karakter bo≈ülƒ±k bƒ±rak
            System.Console.WriteLine($"Boyut    :{sizeof(UInt16),20}");//sizeof(UInt16) -> deƒüi≈üken tipi hafƒ±zada nekadar byte alan kaplƒ±yor. "20" karakter bo≈ülƒ±k bƒ±rak
            System.Console.WriteLine();
            Console.ReadKey();

            //Signed 32 - bit integer
            System.Console.WriteLine(nameof(Int32));//nameof ilgili veri sƒ±nƒ±fƒ±nƒ±n ismini verecek
            System.Console.WriteLine($"Alt Limit     : {Int32.MinValue,20}");//Int32.MinValue -> Int32 nin alabildiƒüi en az deƒüeri g√∂sterir. "20" karakter bo≈ülƒ±k bƒ±rak
            System.Console.WriteLine($"√úst Limit     : {Int32.MaxValue,20}");//Int32.MaxValue -> Int32 nin alabildiƒüi en fazla deƒüeri g√∂sterir. "20" karakter bo≈ülƒ±k bƒ±rak
            System.Console.WriteLine($"Boyut    :{sizeof(Int32),20}");//sizeof(Int32) -> deƒüi≈üken tipi hafƒ±zada nekadar byte alan kaplƒ±yor. "20" karakter bo≈ülƒ±k bƒ±rak
            System.Console.WriteLine();
            Console.ReadKey();

            //Unsigned 32 - bit integer
            System.Console.WriteLine(nameof(UInt32));//nameof ilgili veri sƒ±nƒ±fƒ±nƒ±n ismini verecek
            System.Console.WriteLine($"Alt Limit     : {UInt32.MinValue,20}");//UInt32.MinValue -> UInt32 nin alabildiƒüi en az deƒüeri g√∂sterir. "20" karakter bo≈ülƒ±k bƒ±rak
            System.Console.WriteLine($"√úst Limit     : {UInt32.MaxValue,20}");//UInt32.MaxValue -> UInt32 nin alabildiƒüi en fazla deƒüeri g√∂sterir. "20" karakter bo≈ülƒ±k bƒ±rak
            System.Console.WriteLine($"Boyut    :{sizeof(UInt32),20}");//sizeof(UInt32) -> deƒüi≈üken tipi hafƒ±zada nekadar byte alan kaplƒ±yor. "20" karakter bo≈ülƒ±k bƒ±rak
            System.Console.WriteLine();
            Console.ReadKey();


            /* DOUBLE */
            System.Console.WriteLine(nameof(Double));//nameof ilgili veri sƒ±nƒ±fƒ±nƒ±n ismini verir
            System.Console.WriteLine($"Alt Limit     :{Double.MinValue,20}");//Double.MinValue -> Double nin alabileceƒüi en az deƒüeri g√∂sterir. "20" karakter bo≈üluk bƒ±rak
            System.Console.WriteLine($"√úst Limit     :{Double.MaxValue,20}");//Double.MaxValue -> Double nin alabileceƒüi en fazla deƒüeri g√∂sterir. "20" karakter bo≈üluk bƒ±rak            
            System.Console.WriteLine($"Boyut     :{sizeof(Double),20}");//sizeof(Double) -> deƒüi≈üken tipi hafƒ±zada ka√ß byte alan kaplƒ±yor. "20" karakter bo≈üluk bƒ±rak.
            System.Console.WriteLine();
            Console.ReadKey();



        }












        #region  A√áIKLAMA
        /*  
=============================
üìå C# VERƒ∞ Tƒ∞PLERƒ∞ TABLOSU
=============================

üîπ TAM SAYILAR
----------------------------------------------------------------------
Veri Tipi | Boyut   | Bit | ƒ∞≈üaret | Aralƒ±k                                | A√ßƒ±klama
----------------------------------------------------------------------
sbyte    | 1 byte  |  8  | signed | -128 ‚Ä¶ +127                          | K√º√ß√ºk negatif/pozitif tamsayƒ±
byte     | 1 byte  |  8  | unsigned | 0 ‚Ä¶ 255                            | K√º√ß√ºk pozitif tamsayƒ±
short    | 2 byte  | 16  | signed | -32,768 ‚Ä¶ +32,767                    | Orta boy tamsayƒ±
ushort   | 2 byte  | 16  | unsigned | 0 ‚Ä¶ 65,535                         | Orta boy pozitif tamsayƒ±
int      | 4 byte  | 32  | signed | -2,147,483,648 ‚Ä¶ +2,147,483,647      | En √ßok kullanƒ±lan tamsayƒ±
uint     | 4 byte  | 32  | unsigned | 0 ‚Ä¶ 4,294,967,295                  | B√ºy√ºk pozitif tamsayƒ±
long     | 8 byte  | 64  | signed | -9,223,372,036,854,775,808 ‚Ä¶ 
                                    +9,223,372,036,854,775,807         | √áok b√ºy√ºk tamsayƒ±
ulong    | 8 byte  | 64  | unsigned | 0 ‚Ä¶ 18,446,744,073,709,551,615     | √áok b√ºy√ºk pozitif tamsayƒ±

üîπ ONDALIKLI SAYILAR
----------------------------------------------------------------------
Veri Tipi | Boyut   | Bit | Hassasiyet           | Aralƒ±k (yakla≈üƒ±k)         | A√ßƒ±klama
----------------------------------------------------------------------
float    | 4 byte  | 32  | ~7 basamak           | ¬±1.5e‚àí45 ‚Ä¶ ¬±3.4e38       | Tek duyarlƒ±klƒ± kayan nokta
double   | 8 byte  | 64  | ~15-16 basamak       | ¬±5.0e‚àí324 ‚Ä¶ ¬±1.7e308     | √áift duyarlƒ±klƒ± kayan nokta
decimal  | 16 byte | 128 | ~28-29 basamak       | ¬±1.0e‚àí28 ‚Ä¶ ¬±7.9e28       | Finans/mali hesaplar i√ßin

üîπ MANTIKSAL VE KARAKTER
----------------------------------------------------------------------
Veri Tipi | Boyut   | Bit | Aralƒ±k               | A√ßƒ±klama
----------------------------------------------------------------------
bool     | 1 byte* |  8* | true / false         | Mantƒ±ksal deƒüer (*CLR‚Äôde genelde 1 byte)
char     | 2 byte  | 16  | Unicode (U+0000 ‚Ä¶ U+FFFF) | Tek karakter

üîπ NESNE / REFERANS Tƒ∞PLERƒ∞
----------------------------------------------------------------------
string   | Deƒüi≈üken | -   | -                   | Karakter dizisi (Unicode)
object   | Deƒüi≈üken | -   | -                   | T√ºm tiplerin atasƒ±
var      | -        | -   | -                   | Derleyici tarafƒ±ndan √ßƒ±karƒ±lan tip
dynamic  | -        | -   | -                   | √áalƒ±≈üma zamanƒ±nda belirlenen tip

=============================
NOTLAR:
- signed = i≈üaretli (negatif + pozitif)
- unsigned = i≈üaretsiz (sadece pozitif)
- float/double/decimal -> ondalƒ±klƒ± sayƒ±lar
- string -> metin tutar
- object -> t√ºm tiplerin temelidir
=============================
*/
        #endregion
    }
}