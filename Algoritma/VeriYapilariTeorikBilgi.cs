/*
                ** Veri YapÄ±larÄ± (Data Structures) **

    - Veri yaposÄ±, veriye eriÅŸim , verinin depolanmasÄ±nÄ± ve verinin organisasyonunu temsil eden bir kabramdÄ±r.
    
    - Bir veri yapÄ±sÄ±, veri deÄŸerleri, veriler arasÄ±ndaki iliÅŸkiler ve verilere uygulanabilecek iÅŸlevler veya iÅŸlemlerin bri kolleksiyonudur.

    - Genellikle verimli veri yapÄ±larÄ±, verimli algoritmalarÄ±n anahtarÄ±dÄ±r.
    
    - Veri yapÄ±larÄ± birincil ve ikincil hafÄ±zada depolanan verileri organize etmek Ã¼zere kullanÄ±lÄ±r.

    - Veri yapÄ±larÄ±nÄ± aslÄ±nda soyut bir kavram olarak ele alÄ±nmalÄ±dÄ±r. Anahtar kelime -> Abstract Data Type (ADT)

    - Soyut veri tÃ¼rlerinin temelini oluÅŸturur

    - Soyut veri tÃ¼rÃ¼ ise veri tÃ¼rÃ¼nÃ¼n mantÄ±ksal biÃ§imini tanÄ±mlar.
*/

/*
                ** TANIMLI KOLLEKSÄ°YONLAR **
    
    - Bir koleksiyon (collection) yapÄ±landÄ±rÄ±lmÄ±ÅŸ bir veri tÃ¼rÃ¼dÃ¼r.

    ---- Kolleksiyonlar -> 
    1. DoÄŸrusal kolleksiyonlar (Linear Collections) 

        - DoÄŸrusal kolleksiyonlar elemanlarÄ± bir listesini ifade eder ve liste iÃ§indeki bir eleman, listedeki { bir baÅŸka elemanÄ± takip edecek ÅŸekilde } organize edilmiÅŸtir.

        - Normalde doÄŸrusal bir kolleksiyon (birinci, ikinci, Ã¼Ã§Ã¼ncÃ¼, ...) verinin pozisyonu tarafÄ±ndan sÄ±ralanÄ±r.

        - DoÄŸrusal kolleksiyonlara Ã¶rnek olarak -> Array (Dizi), List (Liste), Queue (Kuyruk), Stack (YÄ±ÄŸÄ±n) verilebilir.


    2. DoÄŸrusal Olmayan Kolleksiyonlar (Non-Linear Collections) 

        - DoÄŸrusal olmayan koleksiyonlar, koleksiyon iÃ§indeki elemanlarÄ± bir pozisyon sÄ±rasÄ±n gÃ¶re organize etmez.

        - Veriyi organize ederken pozisyon bilgisini kullanmazlar.
        
        - DoÄŸrusal olmayan kolleksiyonlara Ã¶rnek olarak -> Graph (Graf), Tree (AÄŸaÃ§), Dictionary ve HashSet verilebilir.
        
    ----
        ğŸ”¹ Linear (DoÄŸrusal) vs Non-Linear (DoÄŸrusal Olmayan)


    1. Linear Collections (DoÄŸrusal)

        Elemanlar ardÄ±ÅŸÄ±k olarak bellekte tutulur.

        Index ile eriÅŸim veya sÄ±rayla dolaÅŸÄ±m mantÄ±ÄŸÄ± vardÄ±r.

    Ã–rnek:

        Array â†’ arr[0], arr[1], arr[2]â€¦

        List<T> â†’ dinamik, ama ardÄ±ÅŸÄ±k eriÅŸim mantÄ±ÄŸÄ± var

        Queue â†’ FIFO

        Stack â†’ LIFO

    2. Non-Linear Collections (DoÄŸrusal Olmayan)

        Elemanlar hash tabanlÄ± veya aÄŸaÃ§ yapÄ±sÄ± ile tutulur.

        Bellekte ardÄ±ÅŸÄ±k olmak zorunda deÄŸil.

        EriÅŸim key veya hash Ã¼zerinden yapÄ±lÄ±r.

    Ã–rnek:

        Dictionary<TKey, TValue> â†’ key Ã¼zerinden O(1) eriÅŸim
        
        HashSet<T> â†’ hash ile unique deÄŸer kontrolÃ¼
        
        Graph, Tree â†’ dÃ¼ÄŸÃ¼mler ve kenarlar ile baÄŸlantÄ±lÄ±

*/